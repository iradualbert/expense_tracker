{"version":3,"sources":["context/GlobalState.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["initialState","transactions","GlobalContext","createContext","AppReducer","state","action","type","filter","transaction","id","payload","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","reduce","currentTotal","trans","amount","sign","Math","abs","toFixed","IncomeExpenses","incomeTotal","income","expenseTotal","expense","className","Transaction","text","onClick","event","preventDefault","TransactionList","length","map","key","AddTransaction","useState","setText","setAmount","onSubmit","Date","random","parseFloat","alert","htmlFor","placeholder","onChange","target","App","Header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b1ac85a.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\n\r\n// initial state\r\n\r\nconst initialState = {\r\n\r\n    transactions: []\r\n}\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n\r\n// App reducer\r\nconst AppReducer = (state, action) => {\r\n    switch (action.type) {   \r\n        case \"DELETE_TRANSACTION\":\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            } \r\n        case \"ADD_TRANSACTION\":\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n    // Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: \"DELETE_TRANSACTION\",\r\n            payload: id\r\n        });\r\n    } \r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: transaction\r\n        })\r\n    }\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction: deleteTransaction,\r\n            addTransaction: addTransaction,\r\n\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n    const total = transactions.reduce((currentTotal, trans) => {\r\n        return trans.amount + currentTotal\r\n    }, 0)\r\n    const sign = total < 0 ? \"-\" : \"+\"\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>{sign}${Math.abs(total).toFixed(2)}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance;","import React, {useContext} from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n    const income = transactions.filter( trans => trans.amount > 0)\r\n    const incomeTotal = income.reduce((currentTotal, income) => {\r\n        return currentTotal + income.amount}, 0)\r\n\r\n    const expense = transactions.filter( trans => trans.amount < 0)\r\n    const expenseTotal = expense.reduce((currentTotal, expense) => {\r\n        return currentTotal + expense.amount\r\n    }, 0)\r\n    return (\r\n        <div className=\"income-expenses-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">+${incomeTotal.toFixed(2)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expenses</h4>\r\n                <p className=\"money minus\">-${Math.abs(expenseTotal).toFixed(2)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Transaction = ({ transaction: { text, amount, id } }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext)\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    deleteTransaction(id);\r\n  }\r\n  return (\r\n    <>\r\n      <li className={amount >= 0 ? \"plus\" : \"minus\"}>\r\n        {text} <span>{amount < 0 ? \"-\" : \"+\"}${Math.abs(amount)}</span>\r\n        <button className=\"delete-btn\" onClick={handleClick}>X</button>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Transaction;","import React, { useContext } from 'react';\r\nimport Transaction from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst TransactionList = () => {\r\n\r\n  const context = useContext(GlobalContext)\r\n  const transactions = context.transactions;\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      {transactions.length ? \r\n        <ul id=\"list\" className=\"list\">\r\n        {transactions.map(transaction => <Transaction key={transaction.id} transaction={transaction} />)}\r\n      </ul> : \r\n      <p>No Transaction Yet</p>}\r\n      \r\n    </>\r\n    )\r\n}\r\n\r\nexport default TransactionList;","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from '../context/GlobalState'\r\nfunction  generateId () {\r\n    return `${new Date()}-${Math.random()}`\r\n}\r\n\r\nconst AddTransaction = () => {\r\n    const { addTransaction } = useContext(GlobalContext)\r\n    const [text, setText] = useState(\"\")\r\n    const [amount, setAmount] = useState(0)\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(!text || !amount){\r\n            alert('Text and Amount are all required!')\r\n            return \r\n        }\r\n        else{\r\n            // add the new transaction to the list\r\n            addTransaction({ id: generateId(), text: text, amount: parseFloat(amount) })\r\n            // console.log({ id: generateId(), text: text, amount: parseFloat(amount) })\r\n            setText(\"\")\r\n            setAmount(0)\r\n            return \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add New Transaction</h3>\r\n            <form onSubmit={handleSubmit}><div className=\"form-control\">\r\n                <label htmlFor=\"text\">Text</label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter name of the transaction\"\r\n                    value={text}\r\n                    onChange={(event) => setText(event.target.value)}\r\n                />\r\n            </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter amount\"\r\n                        value={amount}\r\n                        onChange={(event) => setAmount(event.target.value)}\r\n                    />\r\n                </div>\r\n                <button className=\"btn\" type=\"submit\">Add Transaction</button></form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AddTransaction","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from  \"./components/TransactionList\";\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState'\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}